{"version":3,"sources":["Components/Result/ResultStyle.js","Components/Result/Result.js","Components/Result/index.js","Components/Timer/TimerStyle.js","utils/quickSort.js","utils/constants/dayArray.js","utils/constants/monthArray.js","utils/dateObject.js","Components/Timer/Timer.js","Components/Timer/index.js","Components/StartButton/StartButtonStyle.js","Components/StartButton/StartButton.js","utils/checkValidation.js","utils/splitNumber.js","utils/reverseArray.js","Components/StartButton/index.js","Components/Input/InputStyle.js","Components/Input/Input.js","Components/Input/index.js","Components/ToastMessage/ToastMessageStyle.js","Components/ToastMessage/ToastMessage.js","Components/ToastMessage/index.js","Pages/MainStyle.js","Pages/Main.js","Pages/index.js","App.js","Styles/GlobalStyles.js","Styles/mixin.js","index.js"],"names":["Input","styled","div","ResultContainer","style","ResultNumber","attrs","type","ResultPlaceholder","theme","flexSet","Result","props","sortedArray","up","ArrLength","length","join","DateContainer","quickSort","numArr","start","end","pivot","left","right","dayArrayKO","dayArrayEN","monthArrayEN","dateObject","today","Date","getFullYear","getMonth","getDate","getDay","convertKR","convertUS","Timer","language","useState","now","setNow","useEffect","Button","StartButton","inputData","setAscendedArray","setDescendedArray","keyEnter","setKeyEnter","status","msg","toast","setToast","onClickStart","useCallback","test","checkValidation","numStr","message","tempArr","split","i","sign","number","answer","slice","j","temp","parseInt","push","splitNumber","prevToast","setTimeout","array","reversedArray","reverseArray","timeInterver","clearTimeout","onClick","show","contents","CheckBtn","input","setInputData","onChangeNumber","e","target","value","onChange","onKeyPress","key","InputNumber","placeholder","Container","Wrap","Header","Contents","ToastMessage","createPortal","document","getElementById","Layout","Main","ascendedArray","descendedArray","App","GlobalStyles","createGlobalStyle","reset","mixin","justify","items","direction","css","ReactDOM","render"],"mappings":"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","file":"static/js/main.af88dbc9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Input = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst ResultContainer = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  overflow-y: auto;\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  padding: 0 15px;\r\n  margin-bottom: 16px;\r\n  background-color: #fff;\r\n  font-size: 12px;\r\n  border: 1px solid rgba(154, 154, 154, 0.5);\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst ResultNumber = styled(Input).attrs({\r\n  type: 'text',\r\n})``;\r\n\r\nconst ResultPlaceholder = styled.div`\r\n  ${({ theme }) => theme.flexSet()};\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 12px;\r\n  color: gray;\r\n`;\r\n\r\nexport const style = {\r\n  ResultNumber,\r\n  ResultContainer,\r\n  ResultPlaceholder,\r\n};\r\n","import React from 'react';\r\nimport { style } from './ResultStyle';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Result = (props) => {\r\n  const { sortedArray, up } = props;\r\n  const ArrLength = sortedArray.length;\r\n  return (\r\n    <>\r\n      <ResultContainer>\r\n        {ArrLength === 0 ? (\r\n          <ResultPlaceholder>\r\n            {up ? '오름차순 결과' : '내림차순 결과'}\r\n          </ResultPlaceholder>\r\n        ) : (\r\n          <ResultNumber>{sortedArray.join(', ')}</ResultNumber>\r\n        )}\r\n      </ResultContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n\r\nconst { ResultNumber, ResultContainer, ResultPlaceholder } = style;\r\n\r\nResult.propTypes = {\r\n  sortedArray: PropTypes.array,\r\n  up: PropTypes.bool,\r\n};\r\n","import Result from './Result';\r\n\r\nexport default Result;\r\n","import styled from 'styled-components';\r\n\r\nconst DateContainer = styled.div`\r\n  ${({ theme }) => theme.flexSet()};\r\n  height: 50px;\r\n  font-size: large;\r\n`;\r\n\r\nexport const style = {\r\n  DateContainer,\r\n};\r\n","export default function quickSort(numArr, start, end) {\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n  let pivot = start;\r\n  let left = start + 1;\r\n  let right = end;\r\n  while (left <= right) {\r\n    while (left <= end && numArr[left] <= numArr[pivot]) {\r\n      left += 1;\r\n    }\r\n    while (right > start && numArr[right] >= numArr[pivot]) {\r\n      right -= 1;\r\n    }\r\n    if (left > right) {\r\n      [numArr[right], numArr[pivot]] = [numArr[pivot], numArr[right]];\r\n    } else {\r\n      [numArr[left], numArr[right]] = [numArr[right], numArr[left]];\r\n    }\r\n  }\r\n  quickSort(numArr, start, right - 1);\r\n  quickSort(numArr, right + 1, end);\r\n}\r\n","export const dayArrayKO = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\nexport const dayArrayEN = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n","export const monthArrayEN = [\r\n  'January',\r\n  'Fabruary',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n","import { dayArrayKO, dayArrayEN, monthArrayEN } from './constants';\r\n\r\nexport const dateObject = {\r\n  'ko-KR': convertKR(),\r\n  'en-US': convertUS(),\r\n};\r\n\r\nfunction convertKR() {\r\n  const today = new Date();\r\n  return `${today.getFullYear()}년 ${\r\n    today.getMonth() + 1\r\n  }월 ${today.getDate()}일 ${dayArrayKO[today.getDay()]}요일`;\r\n}\r\n\r\nfunction convertUS() {\r\n  const today = new Date();\r\n  return `${dayArrayEN[today.getDay()]} ${\r\n    monthArrayEN[today.getMonth()]\r\n  } ${today.getDate()}, ${today.getFullYear()}`;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { style } from './TimerStyle';\r\nimport { dateObject } from 'utils';\r\n\r\nconst Timer = ({ language }) => {\r\n  const [now, setNow] = useState('');\r\n\r\n  useEffect(() => {\r\n    setNow(dateObject[language]);\r\n  }, [language]);\r\n\r\n  return (\r\n    <>\r\n      <DateContainer>{now}</DateContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n\r\nTimer.propTypes = {\r\n  language: PropTypes.string,\r\n};\r\n\r\nconst { DateContainer } = style;\r\n","import Timer from './Timer';\r\n\r\nexport default Timer;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.div`\r\n  ${({ theme }) => theme.flexSet()};\r\n  height: 44px;\r\n  background-color: black;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst CheckBtn = styled(Button)`\r\n  width: 50%;\r\n`;\r\n\r\nexport const style = {\r\n  CheckBtn,\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { style } from './StartButtonStyle';\r\nimport PropTypes from 'prop-types';\r\nimport { quickSort, reverseArray, splitNumber, checkValidation } from 'utils';\r\nimport { Toast } from 'Components';\r\n\r\nconst StartButton = (props) => {\r\n  const {\r\n    inputData,\r\n    setAscendedArray,\r\n    setDescendedArray,\r\n    keyEnter,\r\n    setKeyEnter,\r\n  } = props;\r\n  const [toast, setToast] = useState({\r\n    status: false,\r\n    msg: '',\r\n  });\r\n\r\n  const onClickStart = useCallback(() => {\r\n    setAscendedArray([]);\r\n    setDescendedArray([]);\r\n    if (!checkValidation(inputData)) {\r\n      setToast((prevToast) => ({\r\n        ...prevToast,\r\n        status: true,\r\n        msg: '양식에 알맞게 입력해주세요. ex)1,-1,3,-4,5',\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const { message, numArr } = splitNumber(inputData);\r\n    if (message) {\r\n      setToast((prevToast) => ({\r\n        ...prevToast,\r\n        status: true,\r\n        msg: message,\r\n      }));\r\n      return;\r\n    }\r\n    quickSort(numArr, 0, numArr.length - 1);\r\n    setAscendedArray(numArr);\r\n    setTimeout(() => {\r\n      setDescendedArray(reverseArray(numArr));\r\n    }, 3000);\r\n  }, [inputData, setAscendedArray, setDescendedArray]);\r\n\r\n  useEffect(() => {\r\n    if (keyEnter === true) {\r\n      onClickStart();\r\n      setKeyEnter(false);\r\n    }\r\n  }, [keyEnter, onClickStart, setKeyEnter]);\r\n\r\n  useEffect(() => {\r\n    if (toast.status) {\r\n      const timeInterver = setTimeout(() => {\r\n        setToast((prevToast) => ({ ...prevToast, status: false }));\r\n      }, 2000);\r\n      return () => clearTimeout(timeInterver);\r\n    }\r\n  }, [toast]);\r\n\r\n  return (\r\n    <>\r\n      <CheckBtn onClick={onClickStart}>정렬 시작하기</CheckBtn>\r\n      <Toast show={toast.status} contents={toast.msg} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartButton;\r\n\r\nconst { CheckBtn } = style;\r\n\r\nStartButton.propTypes = {\r\n  inputData: PropTypes.string,\r\n  setAscendedArray: PropTypes.func,\r\n  setDescendedArray: PropTypes.func,\r\n  keyEnter: PropTypes.bool,\r\n  setKeyEnter: PropTypes.func,\r\n};\r\n","export default function checkValidation(inputData) {\r\n  const regex = /[^-\\d,]+/;\r\n  if (regex.test(inputData)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n","export default function splitNumber(numStr) {\r\n  if (!numStr.length) {\r\n    return {\r\n      message: '값을 입력해주세요.',\r\n      numArr: [],\r\n    };\r\n  }\r\n  const tempArr = numStr.split(',');\r\n  const numArr = [];\r\n  let message = '';\r\n\r\n  for (let i = 0; i < tempArr.length; i++) {\r\n    let sign = 1;\r\n    let number = tempArr[i];\r\n    let answer = 0;\r\n    if (number.length === 0) {\r\n      message = '올바르지 않은 양식입니다.';\r\n      break;\r\n    }\r\n    if (number[0] === '-') {\r\n      sign = -1;\r\n      number = number.slice(1);\r\n    }\r\n    for (let j = 0; j < number.length; j++) {\r\n      const temp = number[j];\r\n      if (temp === '-') {\r\n        message = '\"-\"가 2개 이상 들어있습니다.';\r\n        break;\r\n      }\r\n      answer = answer * 10 + parseInt(temp);\r\n    }\r\n    if (message) {\r\n      break;\r\n    }\r\n    numArr.push(answer * sign);\r\n  }\r\n  return {\r\n    message: message,\r\n    numArr: numArr,\r\n  };\r\n}\r\n","export default function reverseArray(array) {\r\n  const reversedArray = [];\r\n  for (let i = array.length - 1; i >= 0; i--) {\r\n    reversedArray.push(array[i]);\r\n  }\r\n  return reversedArray;\r\n}\r\n","import StartButton from './StartButton';\r\n\r\nexport default StartButton;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  margin: 0 auto;\r\n  padding: 0 15px;\r\n  width: 100%;\r\n  height: 44px;\r\n  margin-bottom: 16px;\r\n  background-color: #fff;\r\n  font-size: 12px;\r\n  border: 1px solid rgba(154, 154, 154, 0.5);\r\n  border-radius: 2px;\r\n  -webkit-appearance: none !important;\r\n  outline: none;\r\n  opacity: 1 !important;\r\n  &:focus,\r\n  &:hover {\r\n    color: #6dc043;\r\n    border: solid 1px #a5d25f;\r\n    background-color: rgba(165, 210, 95, 0.1);\r\n  }\r\n`;\r\n\r\nconst InputNumber = styled(Input).attrs({\r\n  type: 'text',\r\n  placeholder: '숫자를 입력해주세요   ex)1,2,3,4,5',\r\n})``;\r\n\r\nexport const style = {\r\n  InputNumber,\r\n};\r\n","import React from 'react';\r\nimport { style } from './InputStyle';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = (props) => {\r\n  const { setInputData, setKeyEnter } = props;\r\n\r\n  const onChangeNumber = (e) => {\r\n    setInputData(e.target.value);\r\n  };\r\n\r\n  const onKeyPressEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      setKeyEnter(true);\r\n    }\r\n    onChangeNumber(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputNumber onChange={onChangeNumber} onKeyPress={onKeyPressEnter} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nconst { InputNumber } = style;\r\n\r\nInput.propTypes = {\r\n  setInputData: PropTypes.func,\r\n  setKeyEnter: PropTypes.func,\r\n};\r\n","import Input from './Input';\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  top: 20%;\r\n  left: 50%;\r\n  background-color: #666666;\r\n  border-radius: 20px;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1;\r\n`;\r\nexport const Wrap = styled.div`\r\n  ${({ theme }) => theme.flexSet('center', 'center', 'column')};\r\n  width: auto;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n`;\r\nexport const Header = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 1.5rem;\r\n  font-size: 13px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const Contents = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  color: #ffffff;\r\n`;\r\nexport const style = {\r\n  Container,\r\n  Wrap,\r\n  Header,\r\n  Contents,\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { style } from './ToastMessageStyle';\r\n\r\nexport default function ToastMessage({ show, contents }) {\r\n  return createPortal(\r\n    <>\r\n      {show && (\r\n        <Container>\r\n          <Wrap>\r\n            <Header>\r\n              <Contents>{contents}</Contents>\r\n            </Header>\r\n          </Wrap>\r\n        </Container>\r\n      )}\r\n    </>,\r\n    document.getElementById('toast-root'),\r\n  );\r\n}\r\n\r\nToastMessage.propTypes = {\r\n  show: PropTypes.bool,\r\n  contents: PropTypes.string,\r\n};\r\n\r\nconst { Container, Wrap, Header, Contents } = style;\r\n","import ToastMessage from './ToastMessage';\r\n\r\nexport default ToastMessage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n  ${({ theme }) => theme.flexSet()};\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  ${({ theme }) => theme.flexSet('center', 'center', 'column')};\r\n  max-width: 480px;\r\n  width: 480px;\r\n  margin: 48px 0;\r\n  padding: 0 15px;\r\n`;\r\n\r\nexport const style = {\r\n  Layout,\r\n  Wrap,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Timer, Input, StartButton, Result } from 'Components';\r\nimport { style } from './MainStyle';\r\n\r\nconst Main = () => {\r\n  const [inputData, setInputData] = useState('');\r\n  const [ascendedArray, setAscendedArray] = useState([]);\r\n  const [descendedArray, setDescendedArray] = useState([]);\r\n  const [keyEnter, setKeyEnter] = useState(false);\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrap>\r\n        <Timer language=\"ko-KR\" />\r\n        <Input setInputData={setInputData} setKeyEnter={setKeyEnter} />\r\n        <StartButton\r\n          inputData={inputData}\r\n          setAscendedArray={setAscendedArray}\r\n          setDescendedArray={setDescendedArray}\r\n          keyEnter={keyEnter}\r\n          setKeyEnter={setKeyEnter}\r\n        />\r\n        <Result sortedArray={ascendedArray} up={true} />\r\n        <Result sortedArray={descendedArray} up={false} />\r\n        <Timer language=\"en-US\" />\r\n      </Wrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst { Layout, Wrap } = style;\r\n","import Main from './Main';\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from 'Pages';\r\n\r\nexport default function App() {\r\n  return <Main />;\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport const GlobalStyles = createGlobalStyle` \r\n    ${reset}\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 14px;\r\n        background-color: #fff;\r\n        color: #000;\r\n    }\r\n    input, button {\r\n        background-color: transparent;\r\n        border: none;\r\n        outline: none;\r\n    }\r\n`;\r\n","import { css } from 'styled-components';\r\n\r\nconst flexSet = (\r\n  justify = 'center',\r\n  items = 'center',\r\n  direction = 'row',\r\n) => css`\r\n  display: flex;\r\n  justify-content: ${justify};\r\n  align-items: ${items};\r\n  flex-direction: ${direction};\r\n`;\r\n\r\nconst mixin = { flexSet };\r\n\r\nexport default mixin;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { GlobalStyles } from 'Styles/GlobalStyles';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport mixin from 'Styles/mixin';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyles />\r\n    <ThemeProvider theme={{ ...mixin }}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}